name: CI/CD Pipeline with SAST

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
      # Шаг 1: Получаем код
      - name: Checkout code
        uses: actions/checkout@v4

      # Шаг 2: Настраиваем Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      # Шаг 3: Устанавливаем зависимости
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest bandit flake8 jq

      # Шаг 4: Запуск Bandit с генерацией артефакта
      - name: Run Bandit SAST Scan
        run: |
          bandit -r . -f json -o bandit_results.json || true

      # Шаг 4.1: Загружаем артефакт сразу после генерации
      - name: Upload Bandit Report
        uses: actions/upload-artifact@v3
        with:
          name: bandit-report
          path: bandit_results.json

      # Шаг 4.2: Проверяем результаты Bandit и "валим" пайплайн при критических уязвимостях
      - name: Check Bandit Results
        id: bandit-check
        run: |
          if [ -f bandit_results.json ]; then
            if jq -e '.results[] | select(.issue_confidence == "HIGH" and .issue_severity == "HIGH")' bandit_results.json; then
              echo "Bandit found critical vulnerabilities! Failing the pipeline."
              exit 1
            else
              echo "No critical vulnerabilities found by Bandit."
            fi
          else
            echo "Bandit report not found. Assuming no issues."
          fi

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: security-scan
    if: success() 
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run flake8
        run: |
          flake8 . --statistics --count

      - name: Run tests
        run: |
          pytest -v tests/
