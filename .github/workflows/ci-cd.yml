name: CI/CD Pipeline with SAST

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
      # Шаг 1: Получаем код
      - name: Checkout code
        uses: actions/checkout@v4

      # Шаг 2: Настраиваем Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # Шаг 3: Устанавливаем зависимости
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest flake8 bandit jq

      # Шаг 4: Запускаем Bandit и сохраняем результаты
      - name: Run Bandit SAST Scan
        run: |
          bandit -r . --severity-level high -f json -o bandit_results.json 

      # Шаг 4.1: Загружаем Bandit результаты как артефакт
      - name: Upload Bandit Report artifact
        uses: actions/upload-artifact@v4
        with:
          name: bandit-results
          path: bandit_results.json

      # Шаг 4.2: Проверяем результаты Bandit и падаем, если HIGH/HIGH
      - name: Check Bandit Results
        id: bandit-check
        run: |
          if [ -f bandit_results.json ]; then
            if jq -e '.results[] | select(.issue_severity=="HIGH")' bandit_results.json; then
              echo "Bandit found critical vulnerabilities! Failing the pipeline."
              exit 1
            else
              echo "No critical HIGH/HIGH vulnerabilities found."
            fi
          else
            echo "Bandit report not found, assuming no issues."
          fi

      # Шаг 5: Запуск Flake8 для проверки стиля кода
      - name: Run flake8
        run: |
          flake8 . --statistics --count

      # Шаг 6: Сканирование зависимостей Trivy
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'HIGH,CRITICAL'

      # Шаг 7: Unit-тесты
      - name: Run Tests with pytest
        run: |
          python -m pytest tests/ -v

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: security-scan  # выполняется только если security-scan успешен
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build step
        run: |
          echo "Build would run here — security-scan passed successfully."
